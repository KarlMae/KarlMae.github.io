{"version":3,"sources":["constants/coordinates.js","helpers/coordinateHelper.js","components/InfoWindowContent/InfoWindowContent.js","components/Map/MapContainer.js","components/LoadingSpinner/LoadingSpinner.js","components/Gallery/Gallery.js","interceptors/authInterceptor.js","services/fourSquare.service.js","components/TextLoader/TextLoader.js","components/Header/Header.js","pages/FrontPage.js","App.js","reportWebVitals.js","index.js"],"names":["coordinates","tartuBusStationCoordinates","lat","lng","tartuCoordinates","checkIfCoordinateWithinDistance","coordinateToCheck","centerCoordinate","km","ky","kx","Math","cos","PI","dx","abs","dy","sqrt","InfoWindowContent","props","header","text","className","GoogleApiWrapper","apiKey","google","venues","selectedVenue","selectVenue","containerStyle","position","width","height","initialCenter","zoom","center","radius","map","venue","location","onClick","id","visible","onClose","undefined","name","address","LoadingSpinner","Gallery","venueImages","isLoading","sort","image","_","venueId","venueImage","style","background","path","axios","interceptors","request","use","config","url","error","Promise","reject","baseUrl","services","fetchBurgerVenues","a","get","response","data","fetchVenuePhotos","photos","items","TextLoader","Header","FrontPage","useState","setVenues","setVenueImages","setSelectedVenue","setLoading","useEffect","fetchImages","images","length","push","prefix","suffix","filter","fetchData","window","scrollTo","top","left","behavior","find","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2fdbe1.chunk.js","sourcesContent":["export const coordinates = {\n    tartuBusStationCoordinates: {\n        lat: 58.3780494,\n        lng: 26.7321094\n    },\n    tartuCoordinates: {\n        lat: 58.3730018,\n        lng: 26.7125123\n    }\n}\n","export const checkIfCoordinateWithinDistance = (coordinateToCheck, centerCoordinate, km) => {\n    const ky = 40000 / 360;\n    const kx = Math.cos(Math.PI * centerCoordinate.lat / 180.0) * ky;\n    const dx = Math.abs(centerCoordinate.lng - coordinateToCheck.lng) * kx;\n    const dy = Math.abs(centerCoordinate.lat - coordinateToCheck.lat) * ky;\n    return Math.sqrt(dx * dx + dy * dy) >= km;\n}\n","import './styles.scss';\nimport React from \"react\";\n\nfunction InfoWindowContent(props) {\n    const {header, text} = props;\n\n    return (\n        <div className='info-window'>\n            <h3 className='info-window__header'>{header}</h3>\n            <p className='info-window__text'>{text}</p>\n        </div>\n    )\n}\n\nexport default InfoWindowContent;\n","import './styles.scss';\nimport React from \"react\";\nimport {Circle, GoogleApiWrapper, InfoWindow, Map, Marker} from 'google-maps-react';\nimport {coordinates} from \"../../constants/coordinates\";\nimport InfoWindowContent from \"../InfoWindowContent/InfoWindowContent\";\n\nfunction MapContainer(props) {\n    const {google, venues, selectedVenue, selectVenue} = props;\n\n    const containerStyle = {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n    }\n\n    return (\n        <Map\n            containerStyle={containerStyle}\n            google={google}\n            initialCenter={coordinates.tartuCoordinates}\n            zoom={12}\n            className='map'\n        >\n            <Circle\n                center={coordinates.tartuBusStationCoordinates}\n                radius={1000}\n            />\n            {venues.map(venue =>\n                <Marker\n                    key={venue.id}\n                    position={{lat: venue.location.lat, lng: venue.location.lng}}\n                    onClick={() => selectVenue(venue.id)}\n                />\n            )}\n            <InfoWindow\n                visible={true}\n                position={selectedVenue?.location}\n                onClose={() => selectVenue(undefined)}\n            >\n                <InfoWindowContent header={selectedVenue?.name} text={selectedVenue?.location.address}/>\n            </InfoWindow>\n        </Map>\n    )\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyAdP5Yi4SHAFqk1eW6vlinCaVWRgdsQeDw'\n})(MapContainer);\n","import './styles.scss';\nimport React from \"react\";\n\nfunction LoadingSpinner() {\n    return (\n        <div className=\"lds-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default LoadingSpinner;\n","import './styles.scss';\nimport '../../styles/animations.scss'\nimport React from \"react\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner\";\n\nfunction Gallery(props) {\n    const {selectedVenue, venueImages, selectVenue, isLoading} = props;\n\n    const sortSelectedElementToFirstPosition = (image, _) => {\n        if (!selectedVenue) {\n            return 0;\n        }\n\n        return image.venueId === selectedVenue.id ? -1 : 1;\n    }\n\n    return (\n        <div className=\"gallery\">\n            {isLoading && <LoadingSpinner/>}\n            {!isLoading &&\n            <div className=\"gallery__grid\">\n                {venueImages.sort(sortSelectedElementToFirstPosition).map((venueImage) =>\n                    <div\n                        key={venueImage.venueId}\n                        onClick={() => selectVenue(venueImage.venueId)}\n                        style={{background: `url(${venueImage.path}) center/cover`}}\n                        className={`\n                            ${selectedVenue?.id === venueImage.venueId && 'gallery__image--selected'} \n                            gallery__image fade-in\n                        `}\n                    />\n                )}\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default Gallery;\n","import axios from \"axios\";\n\nconst clientId = 'X4U5WCPYGMQUW4U5Z3N4IQXQR1P4IIPUG5RBXEZSENFQY5Z3'\nconst clientSecret = 'RCTOSXPSP1IUO3JEK2JRVLNEUGOPZNKLLF2ETNCDH24MZ0DJ'\n\nexport const addFourSquareCredentialInterceptor = () => {\n    axios.interceptors.request.use(function (config) {\n        config.url = `${config.url}&client_id=${clientId}&client_secret=${clientSecret}`;\n        return config;\n    }, function (error) {\n        return Promise.reject(error);\n    });\n}\n\nexport const addFourSquareVersionInterceptor = () => {\n    axios.interceptors.request.use(function (config) {\n        config.url = `${config.url}&v=20200303`\n        return config;\n    }, function (error) {\n        return Promise.reject(error);\n    });\n}\n","import axios from \"axios\";\nimport {addFourSquareCredentialInterceptor, addFourSquareVersionInterceptor} from \"../interceptors/authInterceptor\";\n\naddFourSquareCredentialInterceptor();\naddFourSquareVersionInterceptor();\n\nconst baseUrl = 'https://api.foursquare.com';\n\nexport const services = {\n    fetchBurgerVenues: async () => {\n        const response = await axios.get(\n            `${baseUrl}/v2/venues/search?ll=58.3730018,26.7125123&categoryId=4bf58dd8d48988d16c941735`\n        )\n\n        return response.data.response.venues;\n    },\n    fetchVenuePhotos: async (venueId) => {\n        const response = await axios.get(`${baseUrl}/v2/venues/${venueId}/photos?`)\n        return response.data.response.photos.items;\n    }\n}\n","import './styles.scss';\nimport React from \"react\";\n\nfunction TextLoader(props) {\n    const {className} = props;\n\n    return (\n        <div className={`loader ${className}`}>\n            <p className='loader__text'>Gathering data</p>\n            <span className=\"loader__dot\">.</span>\n            <span className=\"loader__dot\">.</span>\n            <span className=\"loader__dot\">.</span>\n        </div>\n    );\n}\n\nexport default TextLoader;\n","import './styles.scss';\nimport React from \"react\";\nimport TextLoader from \"../TextLoader/TextLoader\";\n\nfunction Header(props) {\n    const {isLoading} = props;\n\n    return (\n        <div className='header'>\n            <h3 className='header__title'>Venues</h3>\n            {isLoading && <TextLoader className='header__loading-notification'/>}\n        </div>\n    )\n}\n\nexport default Header;\n","import './styles.scss';\n\nimport {coordinates} from \"../constants/coordinates\";\nimport {checkIfCoordinateWithinDistance} from \"../helpers/coordinateHelper\";\nimport MapContainer from \"../components/Map/MapContainer\";\nimport React, {useEffect, useState} from \"react\";\nimport Gallery from \"../components/Gallery/Gallery\";\nimport {services} from \"../services/fourSquare.service\";\nimport Header from \"../components/Header/Header\";\n\nfunction FrontPage() {\n    const [venues, setVenues] = useState([]);\n    const [venueImages, setVenueImages] = useState([]);\n    const [selectedVenue, setSelectedVenue] = useState(undefined);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchImages = async (venues) => {\n            const venueImages = [];\n\n            for (const venue of venues) {\n                const images = await services.fetchVenuePhotos(venue.id);\n                if (images.length) {\n                    const image = images[0]\n                    venueImages.push({\n                        venueId: venue.id,\n                        path: image.prefix + '500x500' + image.suffix\n                    });\n                }\n            }\n\n            setVenueImages(venueImages);\n        }\n\n        const fetchData = async () => {\n            let venues = await services.fetchBurgerVenues();\n            venues = venues.filter(venue => checkIfCoordinateWithinDistance(\n                venue.location, coordinates.tartuBusStationCoordinates, 1\n            ))\n\n            setVenues(venues);\n            await fetchImages(venues);\n            setLoading(false);\n        }\n\n        fetchData();\n    }, []);\n\n    const selectVenue = (venueId) => {\n        window.scrollTo(\n            {\n                top: 0,\n                left: 0,\n                behavior: 'smooth'\n            }\n        )\n        setSelectedVenue(venues.find(venue => venue.id === venueId));\n    }\n\n    return (\n        <div className='front-page'>\n            <Header\n                isLoading={isLoading}\n            />\n            <MapContainer\n                venues={venues}\n                selectedVenue={selectedVenue}\n                selectVenue={selectVenue}\n            />\n            <Gallery\n                venueImages={venueImages}\n                selectedVenue={selectedVenue}\n                selectVenue={selectVenue}\n                isLoading={isLoading}\n            />\n        </div>\n    );\n}\n\nexport default FrontPage;\n","import './App.css';\nimport FrontPage from \"./pages/FrontPage\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <div className='application'>\n            <FrontPage/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}